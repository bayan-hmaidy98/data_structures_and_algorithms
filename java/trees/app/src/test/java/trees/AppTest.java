/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package trees;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {

  @Test
  void appHasAGreeting() {
    App classUnderTest = new App();
    assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
  }

  @Test
  void instantiateBinarySearchTree() {
    BinarySearchTree<Integer> bst = new BinarySearchTree<>();
    assertNotNull(bst);
  }

  @Test
  void leftAndRightTest() {
    BinarySearchTree<Integer> bst = new BinarySearchTree<>();


    bst.add(10);
    bst.add(2);
    bst.add(13);

    assertEquals(10, bst.getRoot().getValue());
    assertEquals(2, bst.root.getLeft().getValue());
    assertEquals(13, bst.root.getRight().getValue());
  }
  @Test void emptyTreeInstantiation (){
    BinarySearchTree<Integer> bst = new BinarySearchTree<>();
    assertNotNull(bst);
  }
  @Test void oneRootTree(){
    BinarySearchTree<Integer> bst = new BinarySearchTree<>();
    bst.add(10);
    bst.add(20);
    bst.add(3);
    assertEquals(10,bst.root.getValue() );
  }

  @Test void preorderTest(){
    BinarySearchTree<Integer> bst = new BinarySearchTree<>();
    bst.add(10);
    bst.add(20);
    bst.add(30);
    ArrayList arr = new ArrayList();
    arr.add(10);
    arr.add(20);
    arr.add(30);
    assertEquals(arr, bst.preOrder(bst.root));
  }

  @Test void inorderTest(){
    BinarySearchTree<Integer> bst = new BinarySearchTree<>();
    bst.add(20);
    bst.add(10);
    bst.add(30);
    System.out.println(bst);
    ArrayList arr = new ArrayList();
    arr.add(10);
    arr.add(20);
    arr.add(30);
    assertEquals(arr, bst.inOrder(bst.root));
  }

  @Test void postorderTest(){
    BinarySearchTree<Integer> bst = new BinarySearchTree<>();
    bst.add(20);
    bst.add(10);
    bst.add(30);
    System.out.println(bst);
    ArrayList arr = new ArrayList();
    arr.add(10);
    arr.add(30);
    arr.add(20);
    assertEquals(arr, bst.postOrder(bst.root));
  }
}
